name: Deploy Frontend to Stage
on: 
  push:
    branches:
      - stage

env:
  DEVELOP_PROJECT_ID: primeval-rain-460507-n3
  GAR_LOCATION: asia-northeast3
  INSTANCE_NAME: looper-prod-app-server-1
  ZONE: asia-northeast3-a
  REPOSITORY: looper
  SERVICE: frontend
  REGISTRY: asia-northeast3-docker.pkg.dev/capable-range-455705-h4/looper
  IMAGE_NAME: frontend
  VERSION: ${{ github.sha }}

jobs:
  # 이미지 빌드 및 푸시 단계
  build-and-push:
    name: Build and Push
    if: ${{ github.ref == 'refs/heads/stage' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NEXT_PUBLIC_KAKAO_REST_KEY=${{ secrets.KAKAO_REST_KEY }}
            NEXT_PUBLIC_API_SERVER_URL=${{ secrets.PROD_API_SERVER_URL }}
            NEXT_PUBLIC_KAKAO_REDIRECT_URI=${{ secrets.PROD_KAKAO_REDIRECT_URI }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 서버 배포 단계
  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-24.04
    steps:
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy via IAP
        run: |
          gcloud compute ssh ${{ env.INSTANCE_NAME }} \
            --project=${{ env.DEVELOP_PROJECT_ID }} \
            --zone=${{ env.ZONE }} \
            --tunnel-through-iap \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="cd /opt && \
              sudo docker compose pull looper-frontend && \
              sudo docker compose up -d looper-frontend && \
              sudo docker compose restart looper-nginx"
