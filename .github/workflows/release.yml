name: Release
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 100-hours-a-week/looper-fe
permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Disable Husky (skip install)
        run: npm pkg set scripts.prepare="echo skipping husky install"
      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          HUSKY: 0
        run: npx semantic-release

  docker-build:
    name: Build and Publish Docker Image
    needs: semantic-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.semantic-release.outputs.new-release-version || 'main' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.semantic-release.outputs.new-release-version || 'latest' }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NEXT_PUBLIC_KAKAO_REST_KEY=${{ secrets.KAKAO_REST_KEY }}
            NEXT_PUBLIC_API_SERVER_URL=${{ secrets.PROD_API_SERVER_URL }}
            NEXT_PUBLIC_KAKAO_REDIRECT_URI=${{ secrets.PROD_KAKAO_REDIRECT_URI }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ needs.semantic-release.outputs.new-release-version || 'latest' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
